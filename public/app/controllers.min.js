commerceApp.controller("cartController",["$scope","$location","$http","$log","$route","ngCart","shareService",function($scope,$location,$http,$log,$route,ngCart,shareService){$scope.totalShipping=shareService.totalShipping;$scope.$watch("shareService.totalShipping",function(){$scope.totalShipping=shareService.totalShipping})}]);commerceApp.controller("checkoutController",["$scope","$location","$http","$log","$route","ngCart","shareService",function($scope,$location,$http,$log,$route,ngCart,shareService){$scope.items=shareService.items;$scope.carttax=shareService.carttax;$scope.$watch("shareService.items",function(){$scope.items=shareService.items});$scope.$watch("shareService.carttax",function(){$scope.carttax=shareService.carttax})}]);commerceApp.controller("detailsController",["$scope","$location","$http","$log","$route","ngCart","shareService","$routeParams",function($scope,$location,$http,$log,$route,ngCart,shareService,$routeParams){$scope.department=shareService.cat;$scope.currentItem=$routeParams.id;$scope.details=shareService.details;$scope.toCart=shareService.toCart;$scope.goShopping=shareService.goShopping;$scope.getDetails=function(){$http({method:"GET",url:"/products"}).then(function successCallback(response){$scope.products=response.data;for(var i=0;i<$scope.products.length;i++){if($scope.products[i]._id==$scope.currentItem){$log.info("MATCH AT product "+i+" product id : "+$scope.products[i]._id+" matches "+$scope.currentItem);$scope.thisProduct=$scope.products[i]}}if($scope.thisProduct===undefined){$log.error("unable to find match in product database. Please check url")}},function errorCallback(response){$log.error("getDetails error : "+response)})};$scope.filterFunction=function(element){var departmentMatch=element.department.match(shareService.cat)?true:false;var sameItem=element._id.match($scope.thisProduct._id)?true:false;return departmentMatch===true&&sameItem===false?true:false};$scope.getDetails()}]);commerceApp.controller("headerController",["$scope","$location","$http","$log","$route","shareService",function($scope,$location,$http,$log,$route,shareService){$scope.header=[{name:"header.html",url:"app/pages/header.html"}];$scope.header=$scope.header[0];$scope.shareService=shareService;$scope.toProfile=shareService.toProfile;$scope.toLogin=shareService.toLogin;$scope.toRegister=shareService.toRegister;$scope.logout=shareService.logout;$scope.displayLogin=true;$scope.$watch("shareService.didLogout",function(newVal,oldVal){if(newVal===true){shareService.didLogout=false;$scope.displayLogin=true}});$scope.localLogout=function(){$scope.logout();$scope.displayLogin=true};$scope.getUser=function(){$http({method:"GET",url:"/user"}).then(function successCallback(response){$scope.user=response.data;$log.debug("/user callback was : "+JSON.stringify(response.data));if($scope.user===""){$scope.displayLogin=true}else{$scope.displayLogin=false}},function errorCallback(response){$log.error("/user error was : "+response);$scope.user="user error"})};$scope.getUser()}]);commerceApp.controller("mainController",["$scope","$location","$http","$log","$route","ngCart","shareService","$routeParams",function($scope,$location,$http,$log,$route,ngCart,shareService,$routeParams){if($route.current.tellUser){$scope.tellUser=$route.current.tellUser}ngCart.setTaxRate(7.5);ngCart.setShipping(2.99);$scope.shareService=shareService;$scope.details=shareService.details;$scope.goShopping=shareService.goShopping;$scope.toCart=shareService.toCart;$scope.cartDetails=function(){var items=ngCart.getItems();$scope.items=[];$scope.shippingTotal=0;for(var i=0;i<items.length;i++){var shipping=$scope.randomShipping().toFixed(2);$scope.shippingTotal=Number($scope.shippingTotal)+Number(shipping);$log.debug("shipping : "+shipping);$log.debug("shipping total + shipping = "+$scope.shippingTotal);var thisItem={name:items[i]._name,id:items[i]._id,price:items[i]._price,quantity:items[i]._quantity,shipping:shipping};$scope.items.push(thisItem)}shareService.items=$scope.items;shareService.totalShipping=$scope.shippingTotal;$log.info("Items Array from cartDetails : "+$scope.items);shareService.carttax=(ngCart.getSubTotal()*.075).toFixed(2)};$scope.randomShipping=function(){return Math.random()*(50-5)+5};$scope.cartDetails()}]);commerceApp.controller("productController",["$scope","$location","$http","$log","$route","ngCart","$routeParams","shareService",function($scope,$location,$http,$log,$route,ngCart,$routeParams,shareService){$scope.department=shareService.cat;$scope.subcategory=shareService.subcat;$scope.getProducts=function(){$http({method:"GET",url:"/products"}).then(function successCallback(response){$log.debug("getProducts success : "+JSON.stringify(response.data));$scope.products=response.data;$log.debug($scope.products);$scope.buttonFilter()},function errorCallback(response){$log.error("getProducts error : "+response)})};$scope.buttonFilter=function(){var subcategoriesArray=[];var categoriesArray=[];for(var y=0;y<$scope.products.length;y++){categoriesArray[y]=$scope.products[y].department;categoriesArray=categoriesArray.filter(function(elem,pos){return categoriesArray.indexOf(elem)==pos})}for(var i=0;i<categoriesArray.length;i++){subcategoriesArray[i]=[];for(var x=0;x<$scope.products.length;x++){if($scope.products[x].department===categoriesArray[i]){$log.debug(categoriesArray[i]+" "+$scope.products[x].productAdjective);subcategoriesArray[i].push($scope.products[x].productAdjective);subcategoriesArray[i]=subcategoriesArray[i].filter(function(elem,pos){return subcategoriesArray[i].indexOf(elem)==pos})}}}$log.debug(categoriesArray);$log.debug(subcategoriesArray);$scope.categoriesInfo=categoriesArray;$scope.subcategoriesInfo=subcategoriesArray};$scope.resetFilter=function(){$scope.department="";shareService.cat="";$scope.subcategory="";shareService.subcat=""};$scope.setCategory=function(category){$scope.department=category;shareService.cat=category;$scope.subcategory="";shareService.subcat=""};$scope.setSubcategory=function(category,subcategory){$scope.department=category;shareService.cat=category;$scope.subcategory=subcategory;shareService.subcat=subcategory};$scope.filterFunction=function(element){var departmentMatch=element.department.match($scope.department)?true:false;var subcategoryMatch=element.productAdjective.match($scope.subcategory)?true:false;return departmentMatch&&subcategoryMatch===true?true:false};$scope.getProducts()}]);commerceApp.controller("profileController",["$scope","$location","$http","$log","$route","shareService",function($scope,$location,$http,$log,$route,shareService){$scope.shareService=shareService;$scope.showEdit=false;$scope.profileEdit=function(){$scope.showEdit=true};$scope.toProfile=function(){$scope.showEdit=false};$scope.profileDelete=function(){var yesno=confirm("Are you sure you want to delete your account? This action can not be undone!");if(yesno==true){$http({method:"DELETE",url:"/profile"}).then(function successCallback(response){$log.info(response);shareService.logout();shareService.didLogout=true;$location.path("/")},function errorCallback(response){$log.error("failed to delete profile : "+response)})}};$scope.getProfileInfo=function(){$http({method:"GET",url:"/profile"}).then(function successCallback(response){$log.info("profile success : "+response.data);$scope.profileData=response.data},function errorCallback(response){$log.error("profile fail : "+response)})};$scope.getProfileInfo()}]);